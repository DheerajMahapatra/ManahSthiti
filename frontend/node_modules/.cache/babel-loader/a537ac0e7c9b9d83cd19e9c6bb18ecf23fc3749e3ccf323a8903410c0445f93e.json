{"ast":null,"code":"// import React, { useState, useEffect, useRef } from 'react';\n\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n\n// import { Picker } from 'emoji-mart';\n\n// <Picker onSelect={emoji => console.log(emoji)} />\n\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       {<Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} /> {/* Your original app */}\n//         </Routes>\n//       </Router>\n//       }\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournal, setSavedJournal] = useState('');\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n//   const recognitionRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = localStorage.getItem('journalEntry');\n//     if (saved) setSavedJournal(saved);\n//   }, []);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     localStorage.setItem('journalEntry', journalEntry);\n//     setSavedJournal(journalEntry);\n//     setJournalEntry('');\n//   };\n\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button\n//             onClick={() => setActiveTab('chat')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Chat\n//           </button>\n//           <button\n//             onClick={() => setActiveTab('journal')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n\n//         <main className=\"flex-1 flex overflow-hidden p-4\">\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n\n//         <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//           {/* Mood buttons */}\n//           <div className=\"mb-2\">\n//             <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//             <div className=\"flex gap-2 text-2xl\">\n//               {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                 <button\n//                   key={idx}\n//                   className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                   onClick={() => {\n//                     setMood(m);\n//                     setMessage((prev) => prev + ' ' + m);\n//                   }}\n//                 >\n//                   {m}\n//                 </button>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* üëá Scrollable chat area */}\n//           <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//             {chatHistory.map((msg, index) => (\n//               <div\n//                 key={index}\n//                 className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//               >\n//                 {msg.text}\n//               </div>\n//             ))}\n//             {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//             <div ref={bottomRef} />\n//           </div>\n//         </div>\n\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n//       </main>\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea\n//               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n//               placeholder=\"Dear Journal...\"\n//               value={journalEntry}\n//               onChange={(e) => setJournalEntry(e.target.value)}\n//             ></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button\n//                 onClick={saveJournal}\n//                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n//               >\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournal && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Last Saved Entry:</h3>\n//                 <div className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap\">{savedJournal}</div>\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n\n//             <button\n\n//               onClick={handleSend}\n\n//               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n\n//             >\n\n//               Send\n\n//             </button>\n\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n\n//             </button>\n\n//             {showEmojiPicker && (\n\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n\n//                 <EmojiPicker\n\n//                   onEmojiClick={(emojiData) => {\n\n//                     const selectedEmoji = emojiData.emoji;\n\n//                     setMood(selectedEmoji); // ‚úÖ Mood bhi set\n\n//                     setMessage((prev) => prev + selectedEmoji); // ‚úÖ Message me emoji insert\n\n//                     setShowEmojiPicker(false); // Optional: close picker after selection\n\n//                   }}\n\n//                 />\n\n//               </div>\n\n//             )}\n\n//           </>\n\n//         )}\n\n//       </footer>\n\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         // <main className=\"flex-1 flex overflow-hidden p-4\">\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         //   <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//         //     <div className=\"mb-2\">\n//         //       <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//         //       <div className=\"flex gap-2 text-2xl\">\n//         //         {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//         //           <button key={idx} className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`} onClick={() => {\n//         //             setMood(m);\n//         //             setMessage((prev) => prev + ' ' + m);\n//         //           }}>\n//         //             {m}\n//         //           </button>\n//         //         ))}\n//         //       </div>\n//         //     </div>\n//         //     <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//         //       {chatHistory.map((msg, index) => (\n//         //         <div key={index} className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}>\n//         //           {msg.text}\n//         //         </div>\n//         //       ))}\n//         //       {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//         //       <div ref={bottomRef} />\n//         //     </div>\n//         //   </div>\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         // </main>\n\n//         // <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-start gap-4\">\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n\n//           {/* Left doctor */}\n//           {/* <div className=\"hidden md:flex w-1/5 justify-center items-start\"> */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat */}\n//           <div className=\"w-full md:w-2/5 flex flex-col\">\n//             {/* Mood */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat bubbles */}\n//             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           {/* Right doctor */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\" type=\"text\" placeholder=\"Type your thoughts...\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && handleSend()} />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// // function MainApp() {\n// //   const [message, setMessage] = useState('');\n// //   const [chatHistory, setChatHistory] = useState([]);\n// //   const [loading, setLoading] = useState(false);\n// //   const [activeTab, setActiveTab] = useState('chat');\n// //   const [journalEntry, setJournalEntry] = useState('');\n// //   const [savedJournals, setSavedJournals] = useState([]);\n// //   const [mood, setMood] = useState('');\n// //   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n// //   const recognitionRef = useRef(null);\n// //   const bottomRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n// //     setSavedJournals(saved);\n\n// //     const savedChats = JSON.parse(localStorage.getItem('chatHistory')) || [];\n// //     setChatHistory(savedChats);\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (bottomRef.current) {\n// //       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n// //     }\n// //   }, [chatHistory]);\n\n// //   // Save chat to localStorage whenever it changes\n// //   useEffect(() => {\n// //     localStorage.setItem('chatHistory', JSON.stringify(chatHistory));\n// //   }, [chatHistory]);\n\n// //   const handleSend = async () => {\n// //     if (!message.trim()) return;\n// //     setLoading(true);\n// //     const userMessage = { type: 'user', text: message };\n// //     const updatedHistory = [...chatHistory, userMessage];\n// //     setChatHistory(updatedHistory);\n\n// //     const res = await fetch('http://localhost:5000/api/chat', {\n// //       method: 'POST',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify({ message }),\n// //     });\n\n// //     const data = await res.json();\n// //     const botMessage = { type: 'bot', text: data.reply };\n// //     setChatHistory([...updatedHistory, botMessage]);\n// //     speak(data.reply);\n// //     setMessage('');\n// //     setLoading(false);\n// //   };\n\n// //   const speak = (text) => {\n// //     const synth = window.speechSynthesis;\n// //     const utterance = new SpeechSynthesisUtterance(text);\n// //     synth.speak(utterance);\n// //   };\n\n// //   const handleVoiceInput = () => {\n// //     if (!('webkitSpeechRecognition' in window)) {\n// //       alert('Speech Recognition not supported');\n// //       return;\n// //     }\n// //     const recognition = new window.webkitSpeechRecognition();\n// //     recognition.lang = 'en-US';\n// //     recognition.onresult = (event) => {\n// //       setMessage(event.results[0][0].transcript);\n// //     };\n// //     recognition.start();\n// //     recognitionRef.current = recognition;\n// //   };\n\n// //   const saveJournal = () => {\n// //     const newEntry = {\n// //       text: journalEntry,\n// //       timestamp: new Date().toLocaleString(),\n// //     };\n// //     const updatedEntries = [newEntry, ...savedJournals];\n// //     setSavedJournals(updatedEntries);\n// //     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n// //     setJournalEntry('');\n// //   };\n\n// //   return (\n// //     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n// //       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n// //         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n// //         <div className=\"mt-2\">\n// //           <button\n// //             onClick={() => setActiveTab('chat')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Chat\n// //           </button>\n// //           <button\n// //             onClick={() => setActiveTab('journal')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Journal\n// //           </button>\n// //         </div>\n// //       </header>\n\n// //       {activeTab === 'chat' && (\n// //         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n// //             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n// //           </div>\n\n// //           <div className=\"w-full md:w-2/5 flex flex-col\">\n// //             <div className=\"mb-2\">\n// //               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n// //               <div className=\"flex gap-2 text-2xl\">\n// //                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n// //                   <button\n// //                     key={idx}\n// //                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n// //                     onClick={() => {\n// //                       setMood(m);\n// //                       setMessage((prev) => prev + ' ' + m);\n// //                     }}\n// //                   >\n// //                     {m}\n// //                   </button>\n// //                 ))}\n// //               </div>\n// //             </div>\n\n// //             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n// //               {chatHistory.map((msg, index) => (\n// //                 <div\n// //                   key={index}\n// //                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n// //                 >\n// //                   {msg.text}\n// //                 </div>\n// //               ))}\n// //               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n// //               <div ref={bottomRef} />\n// //             </div>\n// //           </div>\n\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n// //             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       {activeTab === 'journal' && (\n// //         <main className=\"flex-1 p-6 overflow-auto\">\n// //           <div className=\"max-w-3xl mx-auto\">\n// //             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n// //             <textarea\n// //               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n// //               placeholder=\"Dear Journal...\"\n// //               value={journalEntry}\n// //               onChange={(e) => setJournalEntry(e.target.value)}\n// //             ></textarea>\n// //             <div className=\"flex justify-end mt-3\">\n// //               <button\n// //                 onClick={saveJournal}\n// //                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n// //               >\n// //                 Save Entry\n// //               </button>\n// //             </div>\n// //             {savedJournals.length > 0 && (\n// //               <div className=\"mt-6\">\n// //                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n// //                 {savedJournals.map((entry, index) => (\n// //                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n// //                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n// //                     {entry.text}\n// //                   </div>\n// //                 ))}\n// //               </div>\n// //             )}\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n// //         {activeTab === 'chat' && (\n// //           <>\n// //             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n// //               <FaMicrophone />\n// //             </button>\n// //             <input\n// //               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n// //               type=\"text\"\n// //               placeholder=\"Type your thoughts...\"\n// //               value={message}\n// //               onChange={(e) => setMessage(e.target.value)}\n// //               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n// //             />\n// //             <button\n// //               onClick={handleSend}\n// //               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n// //             >\n// //               Send\n// //             </button>\n// //             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n// //               <FaSmile className=\"text-2xl text-yellow-500\" />\n// //             </button>\n// //             {showEmojiPicker && (\n// //               <div className=\"absolute bottom-16 right-4 z-50\">\n// //                 <EmojiPicker\n// //                   onEmojiClick={(emojiData) => {\n// //                     const selectedEmoji = emojiData.emoji;\n// //                     setMood(selectedEmoji);\n// //                     setMessage((prev) => prev + selectedEmoji);\n// //                     setShowEmojiPicker(false);\n// //                   }}\n// //                 />\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </footer>\n// //     </div>\n// //   );\n// // }\n\n// // MainApp component (put this inside App.js)\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat with scrollable area */}\n//           <div className=\"w-full md:w-2/5 flex flex-col max-h-[75vh]\">\n//             {/* Mood buttons */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat area with scroll slider */}\n//             <div className=\"flex-1 overflow-y-auto max-h-[60vh] space-y-4 pr-1 custom-scrollbar bg-white/50 rounded-lg p-2 shadow-inner\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       {/* Chat input footer */}\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/solution challenge/solution challenge/ManahSthiti ‚Äì Your Safe Space/frontend/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\n\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n\n// import { Picker } from 'emoji-mart';\n\n// <Picker onSelect={emoji => console.log(emoji)} />\n\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n\n// export default function App() {\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       {<Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} /> {/* Your original app */}\n//         </Routes>\n//       </Router>\n//       }\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournal, setSavedJournal] = useState('');\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n//   const recognitionRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = localStorage.getItem('journalEntry');\n//     if (saved) setSavedJournal(saved);\n//   }, []);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     localStorage.setItem('journalEntry', journalEntry);\n//     setSavedJournal(journalEntry);\n//     setJournalEntry('');\n//   };\n\n\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n\n\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button\n//             onClick={() => setActiveTab('chat')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Chat\n//           </button>\n//           <button\n//             onClick={() => setActiveTab('journal')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n\n//         <main className=\"flex-1 flex overflow-hidden p-4\">\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n\n//         <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//           {/* Mood buttons */}\n//           <div className=\"mb-2\">\n//             <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//             <div className=\"flex gap-2 text-2xl\">\n//               {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                 <button\n//                   key={idx}\n//                   className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                   onClick={() => {\n//                     setMood(m);\n//                     setMessage((prev) => prev + ' ' + m);\n//                   }}\n//                 >\n//                   {m}\n//                 </button>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* üëá Scrollable chat area */}\n//           <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//             {chatHistory.map((msg, index) => (\n//               <div\n//                 key={index}\n//                 className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//               >\n//                 {msg.text}\n//               </div>\n//             ))}\n//             {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//             <div ref={bottomRef} />\n//           </div>\n//         </div>\n\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n//       </main>\n\n\n\n\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea\n//               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n//               placeholder=\"Dear Journal...\"\n//               value={journalEntry}\n//               onChange={(e) => setJournalEntry(e.target.value)}\n//             ></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button\n//                 onClick={saveJournal}\n//                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n//               >\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournal && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Last Saved Entry:</h3>\n//                 <div className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap\">{savedJournal}</div>\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n\n\n\n//             <button\n\n//               onClick={handleSend}\n\n//               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n\n//             >\n\n//               Send\n\n//             </button>\n\n\n\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n\n//             </button>\n\n\n\n//             {showEmojiPicker && (\n\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n\n//                 <EmojiPicker\n\n//                   onEmojiClick={(emojiData) => {\n\n//                     const selectedEmoji = emojiData.emoji;\n\n//                     setMood(selectedEmoji); // ‚úÖ Mood bhi set\n\n//                     setMessage((prev) => prev + selectedEmoji); // ‚úÖ Message me emoji insert\n\n//                     setShowEmojiPicker(false); // Optional: close picker after selection\n\n//                   }}\n\n//                 />\n\n//               </div>\n\n//             )}\n\n//           </>\n\n//         )}\n\n//       </footer>\n\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         // <main className=\"flex-1 flex overflow-hidden p-4\">\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         //   <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//         //     <div className=\"mb-2\">\n//         //       <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//         //       <div className=\"flex gap-2 text-2xl\">\n//         //         {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//         //           <button key={idx} className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`} onClick={() => {\n//         //             setMood(m);\n//         //             setMessage((prev) => prev + ' ' + m);\n//         //           }}>\n//         //             {m}\n//         //           </button>\n//         //         ))}\n//         //       </div>\n//         //     </div>\n//         //     <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//         //       {chatHistory.map((msg, index) => (\n//         //         <div key={index} className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}>\n//         //           {msg.text}\n//         //         </div>\n//         //       ))}\n//         //       {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//         //       <div ref={bottomRef} />\n//         //     </div>\n//         //   </div>\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         // </main>\n\n//         // <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-start gap-4\">\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n\n//           {/* Left doctor */}\n//           {/* <div className=\"hidden md:flex w-1/5 justify-center items-start\"> */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat */}\n//           <div className=\"w-full md:w-2/5 flex flex-col\">\n//             {/* Mood */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat bubbles */}\n//             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           {/* Right doctor */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\" type=\"text\" placeholder=\"Type your thoughts...\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && handleSend()} />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// // function MainApp() {\n// //   const [message, setMessage] = useState('');\n// //   const [chatHistory, setChatHistory] = useState([]);\n// //   const [loading, setLoading] = useState(false);\n// //   const [activeTab, setActiveTab] = useState('chat');\n// //   const [journalEntry, setJournalEntry] = useState('');\n// //   const [savedJournals, setSavedJournals] = useState([]);\n// //   const [mood, setMood] = useState('');\n// //   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n// //   const recognitionRef = useRef(null);\n// //   const bottomRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n// //     setSavedJournals(saved);\n\n// //     const savedChats = JSON.parse(localStorage.getItem('chatHistory')) || [];\n// //     setChatHistory(savedChats);\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (bottomRef.current) {\n// //       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n// //     }\n// //   }, [chatHistory]);\n\n// //   // Save chat to localStorage whenever it changes\n// //   useEffect(() => {\n// //     localStorage.setItem('chatHistory', JSON.stringify(chatHistory));\n// //   }, [chatHistory]);\n\n// //   const handleSend = async () => {\n// //     if (!message.trim()) return;\n// //     setLoading(true);\n// //     const userMessage = { type: 'user', text: message };\n// //     const updatedHistory = [...chatHistory, userMessage];\n// //     setChatHistory(updatedHistory);\n\n// //     const res = await fetch('http://localhost:5000/api/chat', {\n// //       method: 'POST',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify({ message }),\n// //     });\n\n// //     const data = await res.json();\n// //     const botMessage = { type: 'bot', text: data.reply };\n// //     setChatHistory([...updatedHistory, botMessage]);\n// //     speak(data.reply);\n// //     setMessage('');\n// //     setLoading(false);\n// //   };\n\n// //   const speak = (text) => {\n// //     const synth = window.speechSynthesis;\n// //     const utterance = new SpeechSynthesisUtterance(text);\n// //     synth.speak(utterance);\n// //   };\n\n// //   const handleVoiceInput = () => {\n// //     if (!('webkitSpeechRecognition' in window)) {\n// //       alert('Speech Recognition not supported');\n// //       return;\n// //     }\n// //     const recognition = new window.webkitSpeechRecognition();\n// //     recognition.lang = 'en-US';\n// //     recognition.onresult = (event) => {\n// //       setMessage(event.results[0][0].transcript);\n// //     };\n// //     recognition.start();\n// //     recognitionRef.current = recognition;\n// //   };\n\n// //   const saveJournal = () => {\n// //     const newEntry = {\n// //       text: journalEntry,\n// //       timestamp: new Date().toLocaleString(),\n// //     };\n// //     const updatedEntries = [newEntry, ...savedJournals];\n// //     setSavedJournals(updatedEntries);\n// //     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n// //     setJournalEntry('');\n// //   };\n\n// //   return (\n// //     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n// //       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n// //         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n// //         <div className=\"mt-2\">\n// //           <button\n// //             onClick={() => setActiveTab('chat')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Chat\n// //           </button>\n// //           <button\n// //             onClick={() => setActiveTab('journal')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Journal\n// //           </button>\n// //         </div>\n// //       </header>\n\n// //       {activeTab === 'chat' && (\n// //         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n// //             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n// //           </div>\n\n// //           <div className=\"w-full md:w-2/5 flex flex-col\">\n// //             <div className=\"mb-2\">\n// //               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n// //               <div className=\"flex gap-2 text-2xl\">\n// //                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n// //                   <button\n// //                     key={idx}\n// //                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n// //                     onClick={() => {\n// //                       setMood(m);\n// //                       setMessage((prev) => prev + ' ' + m);\n// //                     }}\n// //                   >\n// //                     {m}\n// //                   </button>\n// //                 ))}\n// //               </div>\n// //             </div>\n\n// //             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n// //               {chatHistory.map((msg, index) => (\n// //                 <div\n// //                   key={index}\n// //                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n// //                 >\n// //                   {msg.text}\n// //                 </div>\n// //               ))}\n// //               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n// //               <div ref={bottomRef} />\n// //             </div>\n// //           </div>\n\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n// //             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       {activeTab === 'journal' && (\n// //         <main className=\"flex-1 p-6 overflow-auto\">\n// //           <div className=\"max-w-3xl mx-auto\">\n// //             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n// //             <textarea\n// //               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n// //               placeholder=\"Dear Journal...\"\n// //               value={journalEntry}\n// //               onChange={(e) => setJournalEntry(e.target.value)}\n// //             ></textarea>\n// //             <div className=\"flex justify-end mt-3\">\n// //               <button\n// //                 onClick={saveJournal}\n// //                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n// //               >\n// //                 Save Entry\n// //               </button>\n// //             </div>\n// //             {savedJournals.length > 0 && (\n// //               <div className=\"mt-6\">\n// //                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n// //                 {savedJournals.map((entry, index) => (\n// //                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n// //                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n// //                     {entry.text}\n// //                   </div>\n// //                 ))}\n// //               </div>\n// //             )}\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n// //         {activeTab === 'chat' && (\n// //           <>\n// //             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n// //               <FaMicrophone />\n// //             </button>\n// //             <input\n// //               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n// //               type=\"text\"\n// //               placeholder=\"Type your thoughts...\"\n// //               value={message}\n// //               onChange={(e) => setMessage(e.target.value)}\n// //               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n// //             />\n// //             <button\n// //               onClick={handleSend}\n// //               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n// //             >\n// //               Send\n// //             </button>\n// //             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n// //               <FaSmile className=\"text-2xl text-yellow-500\" />\n// //             </button>\n// //             {showEmojiPicker && (\n// //               <div className=\"absolute bottom-16 right-4 z-50\">\n// //                 <EmojiPicker\n// //                   onEmojiClick={(emojiData) => {\n// //                     const selectedEmoji = emojiData.emoji;\n// //                     setMood(selectedEmoji);\n// //                     setMessage((prev) => prev + selectedEmoji);\n// //                     setShowEmojiPicker(false);\n// //                   }}\n// //                 />\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </footer>\n// //     </div>\n// //   );\n// // }\n\n// // MainApp component (put this inside App.js)\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat with scrollable area */}\n//           <div className=\"w-full md:w-2/5 flex flex-col max-h-[75vh]\">\n//             {/* Mood buttons */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat area with scroll slider */}\n//             <div className=\"flex-1 overflow-y-auto max-h-[60vh] space-y-4 pr-1 custom-scrollbar bg-white/50 rounded-lg p-2 shadow-inner\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       {/* Chat input footer */}\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}