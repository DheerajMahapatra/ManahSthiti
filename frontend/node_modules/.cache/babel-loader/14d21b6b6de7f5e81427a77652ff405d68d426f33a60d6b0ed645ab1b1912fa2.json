{"ast":null,"code":"var _jsxFileName = \"D:\\\\solution challenge\\\\solution challenge\\\\ManahSthiti \\u2013 Your Safe Space\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n\n// import { Picker } from 'emoji-mart';\n\n// <Picker onSelect={emoji => console.log(emoji)} />\n\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       {<Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} /> {/* Your original app */}\n//         </Routes>\n//       </Router>\n//       }\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournal, setSavedJournal] = useState('');\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n//   const recognitionRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = localStorage.getItem('journalEntry');\n//     if (saved) setSavedJournal(saved);\n//   }, []);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     localStorage.setItem('journalEntry', journalEntry);\n//     setSavedJournal(journalEntry);\n//     setJournalEntry('');\n//   };\n\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button\n//             onClick={() => setActiveTab('chat')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Chat\n//           </button>\n//           <button\n//             onClick={() => setActiveTab('journal')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n\n//         <main className=\"flex-1 flex overflow-hidden p-4\">\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n\n//         <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//           {/* Mood buttons */}\n//           <div className=\"mb-2\">\n//             <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//             <div className=\"flex gap-2 text-2xl\">\n//               {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                 <button\n//                   key={idx}\n//                   className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                   onClick={() => {\n//                     setMood(m);\n//                     setMessage((prev) => prev + ' ' + m);\n//                   }}\n//                 >\n//                   {m}\n//                 </button>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* üëá Scrollable chat area */}\n//           <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//             {chatHistory.map((msg, index) => (\n//               <div\n//                 key={index}\n//                 className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//               >\n//                 {msg.text}\n//               </div>\n//             ))}\n//             {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//             <div ref={bottomRef} />\n//           </div>\n//         </div>\n\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n//       </main>\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea\n//               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n//               placeholder=\"Dear Journal...\"\n//               value={journalEntry}\n//               onChange={(e) => setJournalEntry(e.target.value)}\n//             ></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button\n//                 onClick={saveJournal}\n//                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n//               >\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournal && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Last Saved Entry:</h3>\n//                 <div className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap\">{savedJournal}</div>\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n\n//             <button\n\n//               onClick={handleSend}\n\n//               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n\n//             >\n\n//               Send\n\n//             </button>\n\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n\n//             </button>\n\n//             {showEmojiPicker && (\n\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n\n//                 <EmojiPicker\n\n//                   onEmojiClick={(emojiData) => {\n\n//                     const selectedEmoji = emojiData.emoji;\n\n//                     setMood(selectedEmoji); // ‚úÖ Mood bhi set\n\n//                     setMessage((prev) => prev + selectedEmoji); // ‚úÖ Message me emoji insert\n\n//                     setShowEmojiPicker(false); // Optional: close picker after selection\n\n//                   }}\n\n//                 />\n\n//               </div>\n\n//             )}\n\n//           </>\n\n//         )}\n\n//       </footer>\n\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         // <main className=\"flex-1 flex overflow-hidden p-4\">\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         //   <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//         //     <div className=\"mb-2\">\n//         //       <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//         //       <div className=\"flex gap-2 text-2xl\">\n//         //         {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//         //           <button key={idx} className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`} onClick={() => {\n//         //             setMood(m);\n//         //             setMessage((prev) => prev + ' ' + m);\n//         //           }}>\n//         //             {m}\n//         //           </button>\n//         //         ))}\n//         //       </div>\n//         //     </div>\n//         //     <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//         //       {chatHistory.map((msg, index) => (\n//         //         <div key={index} className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}>\n//         //           {msg.text}\n//         //         </div>\n//         //       ))}\n//         //       {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//         //       <div ref={bottomRef} />\n//         //     </div>\n//         //   </div>\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         // </main>\n\n//         // <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-start gap-4\">\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n\n//           {/* Left doctor */}\n//           {/* <div className=\"hidden md:flex w-1/5 justify-center items-start\"> */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat */}\n//           <div className=\"w-full md:w-2/5 flex flex-col\">\n//             {/* Mood */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat bubbles */}\n//             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           {/* Right doctor */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\" type=\"text\" placeholder=\"Type your thoughts...\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && handleSend()} />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// // function MainApp() {\n// //   const [message, setMessage] = useState('');\n// //   const [chatHistory, setChatHistory] = useState([]);\n// //   const [loading, setLoading] = useState(false);\n// //   const [activeTab, setActiveTab] = useState('chat');\n// //   const [journalEntry, setJournalEntry] = useState('');\n// //   const [savedJournals, setSavedJournals] = useState([]);\n// //   const [mood, setMood] = useState('');\n// //   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n// //   const recognitionRef = useRef(null);\n// //   const bottomRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n// //     setSavedJournals(saved);\n\n// //     const savedChats = JSON.parse(localStorage.getItem('chatHistory')) || [];\n// //     setChatHistory(savedChats);\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (bottomRef.current) {\n// //       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n// //     }\n// //   }, [chatHistory]);\n\n// //   // Save chat to localStorage whenever it changes\n// //   useEffect(() => {\n// //     localStorage.setItem('chatHistory', JSON.stringify(chatHistory));\n// //   }, [chatHistory]);\n\n// //   const handleSend = async () => {\n// //     if (!message.trim()) return;\n// //     setLoading(true);\n// //     const userMessage = { type: 'user', text: message };\n// //     const updatedHistory = [...chatHistory, userMessage];\n// //     setChatHistory(updatedHistory);\n\n// //     const res = await fetch('http://localhost:5000/api/chat', {\n// //       method: 'POST',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify({ message }),\n// //     });\n\n// //     const data = await res.json();\n// //     const botMessage = { type: 'bot', text: data.reply };\n// //     setChatHistory([...updatedHistory, botMessage]);\n// //     speak(data.reply);\n// //     setMessage('');\n// //     setLoading(false);\n// //   };\n\n// //   const speak = (text) => {\n// //     const synth = window.speechSynthesis;\n// //     const utterance = new SpeechSynthesisUtterance(text);\n// //     synth.speak(utterance);\n// //   };\n\n// //   const handleVoiceInput = () => {\n// //     if (!('webkitSpeechRecognition' in window)) {\n// //       alert('Speech Recognition not supported');\n// //       return;\n// //     }\n// //     const recognition = new window.webkitSpeechRecognition();\n// //     recognition.lang = 'en-US';\n// //     recognition.onresult = (event) => {\n// //       setMessage(event.results[0][0].transcript);\n// //     };\n// //     recognition.start();\n// //     recognitionRef.current = recognition;\n// //   };\n\n// //   const saveJournal = () => {\n// //     const newEntry = {\n// //       text: journalEntry,\n// //       timestamp: new Date().toLocaleString(),\n// //     };\n// //     const updatedEntries = [newEntry, ...savedJournals];\n// //     setSavedJournals(updatedEntries);\n// //     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n// //     setJournalEntry('');\n// //   };\n\n// //   return (\n// //     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n// //       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n// //         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n// //         <div className=\"mt-2\">\n// //           <button\n// //             onClick={() => setActiveTab('chat')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Chat\n// //           </button>\n// //           <button\n// //             onClick={() => setActiveTab('journal')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Journal\n// //           </button>\n// //         </div>\n// //       </header>\n\n// //       {activeTab === 'chat' && (\n// //         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n// //             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n// //           </div>\n\n// //           <div className=\"w-full md:w-2/5 flex flex-col\">\n// //             <div className=\"mb-2\">\n// //               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n// //               <div className=\"flex gap-2 text-2xl\">\n// //                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n// //                   <button\n// //                     key={idx}\n// //                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n// //                     onClick={() => {\n// //                       setMood(m);\n// //                       setMessage((prev) => prev + ' ' + m);\n// //                     }}\n// //                   >\n// //                     {m}\n// //                   </button>\n// //                 ))}\n// //               </div>\n// //             </div>\n\n// //             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n// //               {chatHistory.map((msg, index) => (\n// //                 <div\n// //                   key={index}\n// //                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n// //                 >\n// //                   {msg.text}\n// //                 </div>\n// //               ))}\n// //               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n// //               <div ref={bottomRef} />\n// //             </div>\n// //           </div>\n\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n// //             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       {activeTab === 'journal' && (\n// //         <main className=\"flex-1 p-6 overflow-auto\">\n// //           <div className=\"max-w-3xl mx-auto\">\n// //             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n// //             <textarea\n// //               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n// //               placeholder=\"Dear Journal...\"\n// //               value={journalEntry}\n// //               onChange={(e) => setJournalEntry(e.target.value)}\n// //             ></textarea>\n// //             <div className=\"flex justify-end mt-3\">\n// //               <button\n// //                 onClick={saveJournal}\n// //                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n// //               >\n// //                 Save Entry\n// //               </button>\n// //             </div>\n// //             {savedJournals.length > 0 && (\n// //               <div className=\"mt-6\">\n// //                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n// //                 {savedJournals.map((entry, index) => (\n// //                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n// //                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n// //                     {entry.text}\n// //                   </div>\n// //                 ))}\n// //               </div>\n// //             )}\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n// //         {activeTab === 'chat' && (\n// //           <>\n// //             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n// //               <FaMicrophone />\n// //             </button>\n// //             <input\n// //               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n// //               type=\"text\"\n// //               placeholder=\"Type your thoughts...\"\n// //               value={message}\n// //               onChange={(e) => setMessage(e.target.value)}\n// //               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n// //             />\n// //             <button\n// //               onClick={handleSend}\n// //               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n// //             >\n// //               Send\n// //             </button>\n// //             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n// //               <FaSmile className=\"text-2xl text-yellow-500\" />\n// //             </button>\n// //             {showEmojiPicker && (\n// //               <div className=\"absolute bottom-16 right-4 z-50\">\n// //                 <EmojiPicker\n// //                   onEmojiClick={(emojiData) => {\n// //                     const selectedEmoji = emojiData.emoji;\n// //                     setMood(selectedEmoji);\n// //                     setMessage((prev) => prev + selectedEmoji);\n// //                     setShowEmojiPicker(false);\n// //                   }}\n// //                 />\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </footer>\n// //     </div>\n// //   );\n// // }\n\n// // MainApp component (put this inside App.js)\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat with scrollable area */}\n//           <div className=\"w-full md:w-2/5 flex flex-col max-h-[75vh]\">\n//             {/* Mood buttons */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat area with scroll slider */}\n//             <div className=\"flex-1 overflow-y-auto max-h-[60vh] space-y-4 pr-1 custom-scrollbar bg-white/50 rounded-lg p-2 shadow-inner\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       {/* Chat input footer */}\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport doctor from '../assets/doctor1.png';\nimport doctor2 from '../assets/doctor2.png';\nimport { FaMicrophone } from 'react-icons/fa';\nimport { FiSend } from 'react-icons/fi';\nimport { BsEmojiSmile } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const bottomRef = useRef(null);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      text: input,\n      type: 'user'\n    };\n    setChatHistory(prev => [...prev, newMessage]);\n    setInput('');\n    setLoading(true);\n    try {\n      const response = await fetch('https://api.chatgpt.com/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      const botReply = {\n        text: data.reply,\n        type: 'bot'\n      };\n      setChatHistory(prev => [...prev, botReply]);\n    } catch (error) {\n      console.error('Error fetching bot response:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [chatHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center text-teal-900 font-bold text-2xl mb-2\",\n      children: \"\\uD83C\\uDF38 ManahSthiti - Your Safe Space \\uD83C\\uDF38\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-4 items-start flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: doctor,\n        alt: \"Doctor1\",\n        className: \"h-48 object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full md:w-2/5 flex flex-col h-[75vh] bg-white/70 rounded-xl shadow-lg overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 py-2 font-medium text-teal-800\",\n          children: \"Mood today:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex px-4 gap-2 pb-2\",\n          children: [\"üòä\", \"üòê\", \"üòû\", \"üò°\", \"üò¥\"].map((mood, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-xl hover:scale-110 transition-transform\",\n            children: mood\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto space-y-4 px-4 py-2 custom-scrollbar\",\n          style: {\n            scrollBehavior: 'smooth'\n          },\n          children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-3 rounded-xl max-w-[75%] whitespace-pre-wrap break-words shadow ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-white'}`,\n            children: msg.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 15\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-gray-500\",\n            children: \"Typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: bottomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1086,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center border-t p-2\",\n          children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {\n            className: \"text-gray-500 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-1 outline-none p-2 rounded-xl border border-gray-300\",\n            placeholder: \"Type your thoughts...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && handleSend()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            className: \"ml-2 p-2 bg-teal-500 text-white rounded-xl hover:bg-teal-600\",\n            children: /*#__PURE__*/_jsxDEV(FiSend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BsEmojiSmile, {\n            className: \"text-yellow-500 ml-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: doctor2,\n        alt: \"Doctor2\",\n        className: \"h-48 object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1057,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"bvtzyyUDWDxzZcoYZYnmyx95uXk=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","doctor","doctor2","FaMicrophone","FiSend","BsEmojiSmile","jsxDEV","_jsxDEV","ChatPage","_s","chatHistory","setChatHistory","input","setInput","loading","setLoading","bottomRef","handleSend","trim","newMessage","text","type","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botReply","reply","error","console","_bottomRef$current","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","mood","idx","style","scrollBehavior","msg","index","ref","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["D:/solution challenge/solution challenge/ManahSthiti ‚Äì Your Safe Space/frontend/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\n\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n\n// import { Picker } from 'emoji-mart';\n\n// <Picker onSelect={emoji => console.log(emoji)} />\n\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n\n// export default function App() {\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       {<Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} /> {/* Your original app */}\n//         </Routes>\n//       </Router>\n//       }\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournal, setSavedJournal] = useState('');\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n//   const recognitionRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = localStorage.getItem('journalEntry');\n//     if (saved) setSavedJournal(saved);\n//   }, []);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     localStorage.setItem('journalEntry', journalEntry);\n//     setSavedJournal(journalEntry);\n//     setJournalEntry('');\n//   };\n\n\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n\n\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button\n//             onClick={() => setActiveTab('chat')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Chat\n//           </button>\n//           <button\n//             onClick={() => setActiveTab('journal')}\n//             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'\n//               }`}\n//           >\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n\n//         <main className=\"flex-1 flex overflow-hidden p-4\">\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n\n//         <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//           {/* Mood buttons */}\n//           <div className=\"mb-2\">\n//             <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//             <div className=\"flex gap-2 text-2xl\">\n//               {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                 <button\n//                   key={idx}\n//                   className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                   onClick={() => {\n//                     setMood(m);\n//                     setMessage((prev) => prev + ' ' + m);\n//                   }}\n//                 >\n//                   {m}\n//                 </button>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* üëá Scrollable chat area */}\n//           <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//             {chatHistory.map((msg, index) => (\n//               <div\n//                 key={index}\n//                 className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//               >\n//                 {msg.text}\n//               </div>\n//             ))}\n//             {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//             <div ref={bottomRef} />\n//           </div>\n//         </div>\n\n//         <div className=\"hidden md:block w-1/6\">\n//           <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         </div>\n//       </main>\n\n\n\n\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea\n//               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n//               placeholder=\"Dear Journal...\"\n//               value={journalEntry}\n//               onChange={(e) => setJournalEntry(e.target.value)}\n//             ></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button\n//                 onClick={saveJournal}\n//                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n//               >\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournal && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Last Saved Entry:</h3>\n//                 <div className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap\">{savedJournal}</div>\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n\n\n\n//             <button\n\n//               onClick={handleSend}\n\n//               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n\n//             >\n\n//               Send\n\n//             </button>\n\n\n\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n\n//             </button>\n\n\n\n//             {showEmojiPicker && (\n\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n\n//                 <EmojiPicker\n\n//                   onEmojiClick={(emojiData) => {\n\n//                     const selectedEmoji = emojiData.emoji;\n\n//                     setMood(selectedEmoji); // ‚úÖ Mood bhi set\n\n//                     setMessage((prev) => prev + selectedEmoji); // ‚úÖ Message me emoji insert\n\n//                     setShowEmojiPicker(false); // Optional: close picker after selection\n\n//                   }}\n\n//                 />\n\n//               </div>\n\n//             )}\n\n//           </>\n\n//         )}\n\n//       </footer>\n\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         // <main className=\"flex-1 flex overflow-hidden p-4\">\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         //   <div className=\"flex-1 max-w-2xl mx-4 flex flex-col\">\n//         //     <div className=\"mb-2\">\n//         //       <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//         //       <div className=\"flex gap-2 text-2xl\">\n//         //         {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//         //           <button key={idx} className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`} onClick={() => {\n//         //             setMood(m);\n//         //             setMessage((prev) => prev + ' ' + m);\n//         //           }}>\n//         //             {m}\n//         //           </button>\n//         //         ))}\n//         //       </div>\n//         //     </div>\n//         //     <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//         //       {chatHistory.map((msg, index) => (\n//         //         <div key={index} className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}>\n//         //           {msg.text}\n//         //         </div>\n//         //       ))}\n//         //       {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//         //       <div ref={bottomRef} />\n//         //     </div>\n//         //   </div>\n//         //   <div className=\"hidden md:block w-1/6\">\n//         //     <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 mx-auto object-contain\" />\n//         //   </div>\n//         // </main>\n\n//         // <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-start gap-4\">\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n\n//           {/* Left doctor */}\n//           {/* <div className=\"hidden md:flex w-1/5 justify-center items-start\"> */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat */}\n//           <div className=\"w-full md:w-2/5 flex flex-col\">\n//             {/* Mood */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat bubbles */}\n//             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           {/* Right doctor */}\n//           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n\n\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\" type=\"text\" placeholder=\"Type your thoughts...\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && handleSend()} />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import { FaMicrophone, FaSmile } from 'react-icons/fa';\n// import EmojiPicker from 'emoji-picker-react';\n\n// import SignIn from './pages/SignIn';\n// import SignUp from './pages/SignUp';\n// import ForgotPassword from './pages/ForgotPassword';\n\n// export default function App() {\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<SignIn />} />\n//           <Route path=\"/signin\" element={<SignIn />} />\n//           <Route path=\"/signup\" element={<SignUp />} />\n//           <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n//           <Route path=\"/main\" element={<MainApp />} />\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// // function MainApp() {\n// //   const [message, setMessage] = useState('');\n// //   const [chatHistory, setChatHistory] = useState([]);\n// //   const [loading, setLoading] = useState(false);\n// //   const [activeTab, setActiveTab] = useState('chat');\n// //   const [journalEntry, setJournalEntry] = useState('');\n// //   const [savedJournals, setSavedJournals] = useState([]);\n// //   const [mood, setMood] = useState('');\n// //   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n// //   const recognitionRef = useRef(null);\n// //   const bottomRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n// //     setSavedJournals(saved);\n\n// //     const savedChats = JSON.parse(localStorage.getItem('chatHistory')) || [];\n// //     setChatHistory(savedChats);\n// //   }, []);\n\n// //   useEffect(() => {\n// //     if (bottomRef.current) {\n// //       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n// //     }\n// //   }, [chatHistory]);\n\n// //   // Save chat to localStorage whenever it changes\n// //   useEffect(() => {\n// //     localStorage.setItem('chatHistory', JSON.stringify(chatHistory));\n// //   }, [chatHistory]);\n\n// //   const handleSend = async () => {\n// //     if (!message.trim()) return;\n// //     setLoading(true);\n// //     const userMessage = { type: 'user', text: message };\n// //     const updatedHistory = [...chatHistory, userMessage];\n// //     setChatHistory(updatedHistory);\n\n// //     const res = await fetch('http://localhost:5000/api/chat', {\n// //       method: 'POST',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify({ message }),\n// //     });\n\n// //     const data = await res.json();\n// //     const botMessage = { type: 'bot', text: data.reply };\n// //     setChatHistory([...updatedHistory, botMessage]);\n// //     speak(data.reply);\n// //     setMessage('');\n// //     setLoading(false);\n// //   };\n\n// //   const speak = (text) => {\n// //     const synth = window.speechSynthesis;\n// //     const utterance = new SpeechSynthesisUtterance(text);\n// //     synth.speak(utterance);\n// //   };\n\n// //   const handleVoiceInput = () => {\n// //     if (!('webkitSpeechRecognition' in window)) {\n// //       alert('Speech Recognition not supported');\n// //       return;\n// //     }\n// //     const recognition = new window.webkitSpeechRecognition();\n// //     recognition.lang = 'en-US';\n// //     recognition.onresult = (event) => {\n// //       setMessage(event.results[0][0].transcript);\n// //     };\n// //     recognition.start();\n// //     recognitionRef.current = recognition;\n// //   };\n\n// //   const saveJournal = () => {\n// //     const newEntry = {\n// //       text: journalEntry,\n// //       timestamp: new Date().toLocaleString(),\n// //     };\n// //     const updatedEntries = [newEntry, ...savedJournals];\n// //     setSavedJournals(updatedEntries);\n// //     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n// //     setJournalEntry('');\n// //   };\n\n// //   return (\n// //     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n// //       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n// //         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n// //         <div className=\"mt-2\">\n// //           <button\n// //             onClick={() => setActiveTab('chat')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Chat\n// //           </button>\n// //           <button\n// //             onClick={() => setActiveTab('journal')}\n// //             className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}\n// //           >\n// //             Journal\n// //           </button>\n// //         </div>\n// //       </header>\n\n// //       {activeTab === 'chat' && (\n// //         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n// //             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n// //           </div>\n\n// //           <div className=\"w-full md:w-2/5 flex flex-col\">\n// //             <div className=\"mb-2\">\n// //               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n// //               <div className=\"flex gap-2 text-2xl\">\n// //                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n// //                   <button\n// //                     key={idx}\n// //                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n// //                     onClick={() => {\n// //                       setMood(m);\n// //                       setMessage((prev) => prev + ' ' + m);\n// //                     }}\n// //                   >\n// //                     {m}\n// //                   </button>\n// //                 ))}\n// //               </div>\n// //             </div>\n\n// //             <div className=\"flex-1 overflow-y-auto space-y-4 pr-1 custom-scrollbar\">\n// //               {chatHistory.map((msg, index) => (\n// //                 <div\n// //                   key={index}\n// //                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n// //                 >\n// //                   {msg.text}\n// //                 </div>\n// //               ))}\n// //               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n// //               <div ref={bottomRef} />\n// //             </div>\n// //           </div>\n\n// //           <div className=\"hidden md:flex w-1/5 justify-center items-start\">\n// //             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       {activeTab === 'journal' && (\n// //         <main className=\"flex-1 p-6 overflow-auto\">\n// //           <div className=\"max-w-3xl mx-auto\">\n// //             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n// //             <textarea\n// //               className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\"\n// //               placeholder=\"Dear Journal...\"\n// //               value={journalEntry}\n// //               onChange={(e) => setJournalEntry(e.target.value)}\n// //             ></textarea>\n// //             <div className=\"flex justify-end mt-3\">\n// //               <button\n// //                 onClick={saveJournal}\n// //                 className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\"\n// //               >\n// //                 Save Entry\n// //               </button>\n// //             </div>\n// //             {savedJournals.length > 0 && (\n// //               <div className=\"mt-6\">\n// //                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n// //                 {savedJournals.map((entry, index) => (\n// //                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n// //                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n// //                     {entry.text}\n// //                   </div>\n// //                 ))}\n// //               </div>\n// //             )}\n// //           </div>\n// //         </main>\n// //       )}\n\n// //       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n// //         {activeTab === 'chat' && (\n// //           <>\n// //             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n// //               <FaMicrophone />\n// //             </button>\n// //             <input\n// //               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n// //               type=\"text\"\n// //               placeholder=\"Type your thoughts...\"\n// //               value={message}\n// //               onChange={(e) => setMessage(e.target.value)}\n// //               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n// //             />\n// //             <button\n// //               onClick={handleSend}\n// //               className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\"\n// //             >\n// //               Send\n// //             </button>\n// //             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n// //               <FaSmile className=\"text-2xl text-yellow-500\" />\n// //             </button>\n// //             {showEmojiPicker && (\n// //               <div className=\"absolute bottom-16 right-4 z-50\">\n// //                 <EmojiPicker\n// //                   onEmojiClick={(emojiData) => {\n// //                     const selectedEmoji = emojiData.emoji;\n// //                     setMood(selectedEmoji);\n// //                     setMessage((prev) => prev + selectedEmoji);\n// //                     setShowEmojiPicker(false);\n// //                   }}\n// //                 />\n// //               </div>\n// //             )}\n// //           </>\n// //         )}\n// //       </footer>\n// //     </div>\n// //   );\n// // }\n\n// // MainApp component (put this inside App.js)\n\n// function MainApp() {\n//   const [message, setMessage] = useState('');\n//   const [chatHistory, setChatHistory] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [activeTab, setActiveTab] = useState('chat');\n//   const [journalEntry, setJournalEntry] = useState('');\n//   const [savedJournals, setSavedJournals] = useState([]);\n//   const [mood, setMood] = useState('');\n//   const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n//   const recognitionRef = useRef(null);\n//   const bottomRef = useRef(null);\n\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('journalEntries')) || [];\n//     setSavedJournals(saved);\n//   }, []);\n\n//   useEffect(() => {\n//     if (bottomRef.current) {\n//       bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   }, [chatHistory]);\n\n//   const handleSend = async () => {\n//     if (!message.trim()) return;\n//     setLoading(true);\n//     const userMessage = { type: 'user', text: message };\n//     const updatedHistory = [...chatHistory, userMessage];\n//     setChatHistory(updatedHistory);\n\n//     const res = await fetch('http://localhost:5000/api/chat', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ message }),\n//     });\n\n//     const data = await res.json();\n//     const botMessage = { type: 'bot', text: data.reply };\n//     setChatHistory([...updatedHistory, botMessage]);\n//     speak(data.reply);\n//     setMessage('');\n//     setLoading(false);\n//   };\n\n//   const speak = (text) => {\n//     const synth = window.speechSynthesis;\n//     const utterance = new SpeechSynthesisUtterance(text);\n//     synth.speak(utterance);\n//   };\n\n//   const handleVoiceInput = () => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       alert('Speech Recognition not supported');\n//       return;\n//     }\n//     const recognition = new window.webkitSpeechRecognition();\n//     recognition.lang = 'en-US';\n//     recognition.onresult = (event) => {\n//       setMessage(event.results[0][0].transcript);\n//     };\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//   };\n\n//   const saveJournal = () => {\n//     const newEntry = {\n//       text: journalEntry,\n//       timestamp: new Date().toLocaleString(),\n//     };\n//     const updatedEntries = [newEntry, ...savedJournals];\n//     setSavedJournals(updatedEntries);\n//     localStorage.setItem('journalEntries', JSON.stringify(updatedEntries));\n//     setJournalEntry('');\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#c2e9e3] to-[#fdfcfb] font-sans\">\n//       <header className=\"bg-teal-500 text-white text-center py-4 shadow-md\">\n//         <h1 className=\"text-2xl font-bold\">üå∏ ManahSthiti - Your Safe Space üå∏</h1>\n//         <div className=\"mt-2\">\n//           <button onClick={() => setActiveTab('chat')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'chat' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Chat\n//           </button>\n//           <button onClick={() => setActiveTab('journal')} className={`px-4 py-1 mx-2 rounded ${activeTab === 'journal' ? 'bg-white text-teal-500' : 'text-white border'}`}>\n//             Journal\n//           </button>\n//         </div>\n//       </header>\n\n//       {activeTab === 'chat' && (\n//         <main className=\"flex-1 flex overflow-hidden p-4 justify-center items-center gap-4\">\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-girl.png\" alt=\"Doctor Girl\" className=\"h-200 object-contain\" />\n//           </div>\n\n//           {/* Centered chat with scrollable area */}\n//           <div className=\"w-full md:w-2/5 flex flex-col max-h-[75vh]\">\n//             {/* Mood buttons */}\n//             <div className=\"mb-2\">\n//               <label className=\"block text-gray-700 font-semibold mb-1\">Mood today:</label>\n//               <div className=\"flex gap-2 text-2xl\">\n//                 {['üòä', 'üòê', 'üòû', 'üò°', 'üò¥'].map((m, idx) => (\n//                   <button\n//                     key={idx}\n//                     className={`transition transform hover:scale-125 ${mood === m ? 'ring-2 ring-teal-400 rounded-full' : ''}`}\n//                     onClick={() => {\n//                       setMood(m);\n//                       setMessage((prev) => prev + ' ' + m);\n//                     }}\n//                   >\n//                     {m}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n\n//             {/* Chat area with scroll slider */}\n//             <div className=\"flex-1 overflow-y-auto max-h-[60vh] space-y-4 pr-1 custom-scrollbar bg-white/50 rounded-lg p-2 shadow-inner\">\n//               {chatHistory.map((msg, index) => (\n//                 <div\n//                   key={index}\n//                   className={`p-3 rounded-xl max-w-[75%] ${msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-gray-100'}`}\n//                 >\n//                   {msg.text}\n//                 </div>\n//               ))}\n//               {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n//               <div ref={bottomRef} />\n//             </div>\n//           </div>\n\n//           <div className=\"hidden md:flex w-1/5 justify-center items-center\">\n//             <img src=\"/doctor-boy.png\" alt=\"Doctor Boy\" className=\"h-200 object-contain\" />\n//           </div>\n//         </main>\n//       )}\n\n//       {activeTab === 'journal' && (\n//         <main className=\"flex-1 p-6 overflow-auto\">\n//           <div className=\"max-w-3xl mx-auto\">\n//             <h2 className=\"text-xl font-bold text-teal-700 mb-4\">üìù Write your thoughts</h2>\n//             <textarea className=\"w-full border rounded-lg p-3 h-60 shadow-inner resize-none\" placeholder=\"Dear Journal...\" value={journalEntry} onChange={(e) => setJournalEntry(e.target.value)}></textarea>\n//             <div className=\"flex justify-end mt-3\">\n//               <button onClick={saveJournal} className=\"bg-teal-500 text-white px-4 py-2 rounded shadow hover:bg-teal-600\">\n//                 Save Entry\n//               </button>\n//             </div>\n//             {savedJournals.length > 0 && (\n//               <div className=\"mt-6\">\n//                 <h3 className=\"text-md font-semibold text-gray-600 mb-1\">Previous Entries:</h3>\n//                 {savedJournals.map((entry, index) => (\n//                   <div key={index} className=\"bg-gray-100 p-3 rounded-lg whitespace-pre-wrap mb-3\">\n//                     <div className=\"text-xs text-gray-500 mb-1\">{entry.timestamp}</div>\n//                     {entry.text}\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         </main>\n//       )}\n\n//       {/* Chat input footer */}\n//       <footer className=\"p-3 border-t flex gap-2 items-center justify-center bg-white relative\">\n//         {activeTab === 'chat' && (\n//           <>\n//             <button onClick={handleVoiceInput} className=\"text-xl text-teal-600\">\n//               <FaMicrophone />\n//             </button>\n//             <input\n//               className=\"flex-1 border rounded-xl p-2 shadow-inner outline-none max-w-2xl\"\n//               type=\"text\"\n//               placeholder=\"Type your thoughts...\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//               onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n//             />\n//             <button onClick={handleSend} className=\"bg-teal-500 hover:bg-teal-600 text-white px-4 py-2 rounded-xl shadow\">Send</button>\n//             <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\n//               <FaSmile className=\"text-2xl text-yellow-500\" />\n//             </button>\n//             {showEmojiPicker && (\n//               <div className=\"absolute bottom-16 right-4 z-50\">\n//                 <EmojiPicker onEmojiClick={(emojiData) => {\n//                   const selectedEmoji = emojiData.emoji;\n//                   setMood(selectedEmoji);\n//                   setMessage((prev) => prev + selectedEmoji);\n//                   setShowEmojiPicker(false);\n//                 }} />\n//               </div>\n//             )}\n//           </>\n//         )}\n//       </footer>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport doctor from '../assets/doctor1.png';\nimport doctor2 from '../assets/doctor2.png';\nimport { FaMicrophone } from 'react-icons/fa';\nimport { FiSend } from 'react-icons/fi';\nimport { BsEmojiSmile } from 'react-icons/bs';\n\nconst ChatPage = () => {\n  const [chatHistory, setChatHistory] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const bottomRef = useRef(null);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const newMessage = { text: input, type: 'user' };\n    setChatHistory((prev) => [...prev, newMessage]);\n    setInput('');\n    setLoading(true);\n\n    try {\n      const response = await fetch('https://api.chatgpt.com/message', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: input })\n      });\n      const data = await response.json();\n      const botReply = { text: data.reply, type: 'bot' };\n      setChatHistory((prev) => [...prev, botReply]);\n    } catch (error) {\n      console.error('Error fetching bot response:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [chatHistory]);\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gradient-to-b from-teal-100 to-white p-4\">\n      <header className=\"text-center text-teal-900 font-bold text-2xl mb-2\">\n        üå∏ ManahSthiti - Your Safe Space üå∏\n      </header>\n\n      <div className=\"flex justify-center gap-4 items-start flex-1\">\n        <img src={doctor} alt=\"Doctor1\" className=\"h-48 object-contain\" />\n\n        <div className=\"w-full md:w-2/5 flex flex-col h-[75vh] bg-white/70 rounded-xl shadow-lg overflow-hidden\">\n          <div className=\"px-4 py-2 font-medium text-teal-800\">Mood today:</div>\n          <div className=\"flex px-4 gap-2 pb-2\">\n            {[\"üòä\", \"üòê\", \"üòû\", \"üò°\", \"üò¥\"].map((mood, idx) => (\n              <button key={idx} className=\"text-xl hover:scale-110 transition-transform\">{mood}</button>\n            ))}\n          </div>\n\n          {/* Chat area with GPT-style scroll */}\n          <div className=\"flex-1 overflow-y-auto space-y-4 px-4 py-2 custom-scrollbar\" style={{ scrollBehavior: 'smooth' }}>\n            {chatHistory.map((msg, index) => (\n              <div\n                key={index}\n                className={`p-3 rounded-xl max-w-[75%] whitespace-pre-wrap break-words shadow ${\n                  msg.type === 'user' ? 'ml-auto bg-teal-200 text-right' : 'mr-auto bg-white'\n                }`}\n              >\n                {msg.text}\n              </div>\n            ))}\n            {loading && <div className=\"text-center text-gray-500\">Typing...</div>}\n            <div ref={bottomRef} />\n          </div>\n\n          {/* Input area */}\n          <div className=\"flex items-center border-t p-2\">\n            <FaMicrophone className=\"text-gray-500 mr-2\" />\n            <input\n              className=\"flex-1 outline-none p-2 rounded-xl border border-gray-300\"\n              placeholder=\"Type your thoughts...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n            />\n            <button\n              onClick={handleSend}\n              className=\"ml-2 p-2 bg-teal-500 text-white rounded-xl hover:bg-teal-600\"\n            >\n              <FiSend />\n            </button>\n            <BsEmojiSmile className=\"text-yellow-500 ml-2\" />\n          </div>\n        </div>\n\n        <img src={doctor2} alt=\"Doctor2\" className=\"h-48 object-contain\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":";;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMgB,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,UAAU,GAAG;MAAEC,IAAI,EAAER,KAAK;MAAES,IAAI,EAAE;IAAO,CAAC;IAChDV,cAAc,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,UAAU,CAAC,CAAC;IAC/CN,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAElB;QAAM,CAAC;MACzC,CAAC,CAAC;MACF,MAAMmB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMC,QAAQ,GAAG;QAAEb,IAAI,EAAEW,IAAI,CAACG,KAAK;QAAEb,IAAI,EAAE;MAAM,CAAC;MAClDV,cAAc,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEW,QAAQ,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRpB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IAAA,IAAAuC,kBAAA;IACd,CAAAA,kBAAA,GAAArB,SAAS,CAACsB,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC3D,CAAC,EAAE,CAAC9B,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAKkC,SAAS,EAAC,oEAAoE;IAAAC,QAAA,gBACjFnC,OAAA;MAAQkC,SAAS,EAAC,mDAAmD;MAAAC,QAAA,EAAC;IAEtE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETvC,OAAA;MAAKkC,SAAS,EAAC,8CAA8C;MAAAC,QAAA,gBAC3DnC,OAAA;QAAKwC,GAAG,EAAE9C,MAAO;QAAC+C,GAAG,EAAC,SAAS;QAACP,SAAS,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElEvC,OAAA;QAAKkC,SAAS,EAAC,yFAAyF;QAAAC,QAAA,gBACtGnC,OAAA;UAAKkC,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtEvC,OAAA;UAAKkC,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAClC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAC5C5C,OAAA;YAAkBkC,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAEQ;UAAI,GAAnEC,GAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyE,CAC1F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNvC,OAAA;UAAKkC,SAAS,EAAC,6DAA6D;UAACW,KAAK,EAAE;YAAEC,cAAc,EAAE;UAAS,CAAE;UAAAX,QAAA,GAC9GhC,WAAW,CAACuC,GAAG,CAAC,CAACK,GAAG,EAAEC,KAAK,kBAC1BhD,OAAA;YAEEkC,SAAS,EAAE,qEACTa,GAAG,CAACjC,IAAI,KAAK,MAAM,GAAG,gCAAgC,GAAG,kBAAkB,EAC1E;YAAAqB,QAAA,EAEFY,GAAG,CAAClC;UAAI,GALJmC,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMP,CACN,CAAC,EACDhC,OAAO,iBAAIP,OAAA;YAAKkC,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtEvC,OAAA;YAAKiD,GAAG,EAAExC;UAAU;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eAGNvC,OAAA;UAAKkC,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC7CnC,OAAA,CAACJ,YAAY;YAACsC,SAAS,EAAC;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/CvC,OAAA;YACEkC,SAAS,EAAC,2DAA2D;YACrEgB,WAAW,EAAC,uBAAuB;YACnCC,KAAK,EAAE9C,KAAM;YACb+C,QAAQ,EAAGC,CAAC,IAAK/C,QAAQ,CAAC+C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI9C,UAAU,CAAC;UAAE;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACFvC,OAAA;YACEyD,OAAO,EAAE/C,UAAW;YACpBwB,SAAS,EAAC,8DAA8D;YAAAC,QAAA,eAExEnC,OAAA,CAACH,MAAM;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACTvC,OAAA,CAACF,YAAY;YAACoC,SAAS,EAAC;UAAsB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENvC,OAAA;QAAKwC,GAAG,EAAE7C,OAAQ;QAAC8C,GAAG,EAAC,SAAS;QAACP,SAAS,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrC,EAAA,CA3FID,QAAQ;AAAAyD,EAAA,GAARzD,QAAQ;AA6Fd,eAAeA,QAAQ;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}